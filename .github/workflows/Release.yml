name: Build and Push to Release Repo

on:
  push:
    branches:
      - main  # Oder der Branch, auf dem du bauen willst

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Build project
        run: cargo build --release

      - name: Install project
        run: cargo install --path .

      - name: Determine target directory
        id: set_target
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "TARGET_DIR=linux" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "TARGET_DIR=windows" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "TARGET_DIR=macos" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Checkout release repo
        uses: actions/checkout@v2
        with:
          repository: mendgart444/GXShell_Stable  # Dein Release-Repo
          token: ${{ secrets.GITHUB_TOKEN }}
          path: GXShell_Stable

      - name: Copy build artifacts to release repo
        run: |
          mkdir -p GXShell_Stable/${{ env.TARGET_DIR }}
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp target/release/your_project_name.exe GXShell_Stable/${{ env.TARGET_DIR }}/
          else
            cp target/release/your_project_name GXShell_Stable/${{ env.TARGET_DIR }}/
          fi
        shell: bash

      - name: Commit and push build artifacts to release repo
        run: |
          cd GXShell_Stable
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ${{ env.TARGET_DIR }}/
          git commit -m "Add ${{ env.TARGET_DIR }} build artifact"
          git push origin main
